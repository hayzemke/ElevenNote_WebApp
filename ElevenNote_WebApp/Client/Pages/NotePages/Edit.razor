@page "/note/edit/{NoteId:int}"
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation
@using ElevenNote_WebApp.Shared.Models.NoteModels
@using ElevenNote_WebApp.Shared.Models.CategoryModels


<h3>Edit Note: @Model.Title</h3>

@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}

@if (categories == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class='container'>
        <EditForm Model="@Model" OnValidSubmit=@HandleSubmit>
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label>Title</label>
                <InputText class="form-control" @bind-Value="Model.Title" />
            </div>
            <div class="form-group">
                <label>Content</label>
                <InputTextArea class="form-control" @bind-Value="Model.Content"></InputTextArea>
            </div>
            <div class="form-group">
                <label>Category</label>
                <InputSelect class="form-control" @bind-Value="Model.CategoryID">
                    @foreach (var category in categories)
                        {
                        <option value="@category.ID">@category.Name</option>
                        }
                </InputSelect>
            </div>
            <button type="submit" class="btn btn-primary btn-block mt-5">Submit</button>
        </EditForm>
    </div>

}

@code {
    [Parameter]
    public int NoteID { get; set; }
    private NoteEdit Model = new();
    private IEnumerable<CategoryListItem> categories;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        Model = await http.GetFromJsonAsync<NoteEdit>($"api/Notee/{NoteID}");
        categories = await http.GetFromJsonAsync<IEnumerable<CategoryListItem>>("api/Category/");
    }

    private async void HandleSubmit()
    {
        var createRes = await http.PutAsJsonAsync<NoteEdit>($"api/NoteEntity/edit/{NoteID}", Model);
        if (createRes.IsSuccessStatusCode)
            navigation.NavigateTo($"/note/{NoteID}");
        else
            errorMessage = "Could not create your note right now. Please try again later.";
    }
}
